name: CI Pipeline

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Bandit
      run: |
        pip install bandit
        bandit -r todo_project/ > bandit_report.txt
        cat bandit_report.txt

    - name: Run Dependency-Check
      run: |
        pip install owasp-dependency-check
        dependency-check --project "Your Project Name" --scan todo_project/ --out ./dependency-check-report

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Run tests
      run: |
        cd todo_project/todo_project/tests
        PYTHONPATH=../../ python -m unittest discover -s . -p 'test_*.py'

  zap:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Start ZAP
      run: |
        docker run -d -p 8080:8080 owasp/zap2docker-stable zap.sh -daemon -host 0.0.0.0 -port 8080

    - name: Wait for ZAP to start
      run: |
        sleep 30  # Aguardar 30 segundos para o ZAP iniciar

    - name: Run ZAP Scan
      run: |
        docker exec -t $(docker ps -q -f "ancestor=owasp/zap2docker-stable") zap-cli quick-scan --self-contained --spider http://localhost:5000
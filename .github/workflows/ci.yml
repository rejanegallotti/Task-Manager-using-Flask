name: CI Pipeline

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

  bandit_sast:
    name: Bandit for SAST
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        
      - name: Install Bandit
        run: |
          python -m pip install bandit
        
      - name: Run Bandit
        run: |
          bandit -r .
          
  dependency-check:
    name: Run OWASP Dependency-Check for Python
    runs-on: ubuntu-latest
    needs: test
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
        
      - name: Install OWASP Dependency-Check
        run: |
          pip install dependency-check
        
      - name: Run OWASP Dependency-Check
        run: |
          dependency-check --out odc-reports --scan .
        
      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: odc-reports

  zap_scan:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write  # Permissão necessária para criar issues
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t task-manager-using-flask-web-1 .

      - name: Run Flask app in Docker
        run: |
          docker run -d -p 5000:5000 --name task-manager-using-flask-web-1 task-manager-using-flask-web-1
          sleep 10

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: "http://localhost:5000"

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: ZAP Report
          path: odc-reports

      - name: Stop Docker container
        if: always()
        run: docker stop task-manager-using-flask-web-1


  # Etapa de Review (Cria um ambiente temporário para revisão)
  review:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy para o ambiente de revisão
        run: |
          docker-compose up -d
    environment:
      name: review/${{ github.head_ref }}
      url: http://localhost:5000
    if: github.event_name == 'pull_request'

  # Etapa de Deploy em Stage
  deploy_stage:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Deploy para o ambiente de Stage
      run: |
        docker-compose -f docker-compose.stage.yml up -d
    

  # Testes de Segurança Dinâmicos (DAST) no ambiente de Stage
  dast_scan_stage:
    runs-on: ubuntu-latest
    needs: deploy_stage
    steps:
      - name: OWASP ZAP Scan no ambiente de Stage
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: "http://staging.example.com"
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: ZAP Report
          path: zap_report_stage.html